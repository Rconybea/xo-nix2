# workflow to build XO projects (indentlog, refcnt, reflect, ..)
# using custom docker container
#
# NOTES
# 1. GIT_TOKEN granted automatically by github.
#    has read permission on public resources + read/write permission on this repo
#
# 2. container built from [[https:github.com:rconybea/docker-xo-builder]]
#
# 3. runner filesystem as build completes:
#
#      {{github.workspace}} (looks like will be [/home/runner/work/xo-nix3/xo-nix3] in practice)
#      +- repo
#      |  +- xo-cmake/      (source for xo-cmake)
#      |  +- indentlog/     (source for indentlog)
#      |  \- subsys/        (source for subsys)
#      |
#      +- build_xo-cmake/   (build for xo-cmake runs here)
#      +- build_indentlog/  (build for indentlog runs here)
#      +- build_subsys/     (build for subsys runs here)
#      |
#      \- local             (common install prefix)
#         +- share
#         |  \- cmake
#         |     \- xo_macros...
#         +- include
#         |  +- indentlog...
#         |  \- subsys..
#         +- bin
#
# 4. container filesystem
#      |          (root)
#      +- bin...
#      +- lib
#      |  +- cmake
#      |  |  \- Catch2...
#      |  ..
#      +- include/
#      +- share/
#      ..
#
# 5. to invoke cmake build steps,  need to hint container filesystem paths
#    e.g. /lib/cmake for cmake modules
#

name: XO builder

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build_job:
    name: compile XO projects, using prepared docker container
    runs-on: ubuntu-latest
    container:
      # custom docker image.  see github.com:rconybea/docker-xo-builder for definition
      image: ghcr.io/rconybea/docker-xo-builder:v1
    steps:
      # not using usual checkout actions:  they don't work out-of-the-box from within a container

      #- name: print container /include
      #  run: tree -L 2 --filelimit 10 /include
      #
      #- name: print container /lib
      #  run: tree -L 2 --filelimit 10 /lib

      # ----------------------------------------------------------------
      # xo-cmake
      # ----------------------------------------------------------------

      - name: prep dir xo-cmake
        run: |
          echo "::group::clone repo"
          mkdir -p repo/xo-cmake
          GIT_SSL_NO_VERIFY=true git clone https://${{env.GIT_USER}}:${{env.GIT_TOKEN}}@github.com/rconybea/xo-cmake.git repo/xo-cmake
          echo "::endgroup"

          echo "::group::configure cmake"
          cmake -B ${{github.workspace}}/build_xo-cmake -DCMAKE_MODULE_PATH=/lib/cmake -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/local repo/xo-cmake
          echo "::endgroup"

          echo "::group::compile cmake"
          cmake --build ${{github.workspace}}/build_xo-cmake --config ${{env.BUILD_TYPE}}
          echo "::endgroup"

          echo "::group::install cmake"
          cmake --install ${{github.workspace}}/build_xo-cmake
          echo "::endgroup"

          echo "::group::result (print install-tree)"
          tree ${{github.workspace}}/local
          echo "::endgroup"

      # ----------------------------------------------------------------
      # xo-indentlog
      # ----------------------------------------------------------------

      - name: prep dir indentlog
        run:  mkdir -p repo/indentlog

      - name: checkout indentlog
        run:  GIT_SSL_NO_VERIFY=true git clone https://${{env.GIT_USER}}:${{env.GIT_TOKEN}}@github.com/rconybea/indentlog.git repo/indentlog

      - name: configure indentlog
        run:  cmake -B ${{github.workspace}}/build_indentlog "-DCMAKE_MODULE_PATH=${{github.workspace}}/local/share/cmake;/lib/cmake" -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/local repo/indentlog

      - name: build indentlog
        run: cmake --build ${{github.workspace}}/build_indentlog --config ${{env.BUILD_TYPE}} --verbose

      - name: test indentlog
        run: ctest -B ${{github.workspace}}/build_indentlog

      - name: install indentlog
        run: cmake --install ${{github.workspace}}/build_indentlog

      - name: print install tree
        run:
          tree ${{github.workspace}}/local

      # ----------------------------------------------------------------
      # TODO:
      #
      # xo-subsys
      # xo-refcnt
      # xo-randomgen
      # xo-ordinaltree
      # xo-pyutil
      # xo-reflect
      # xo-pyreflect
      # xo-printjson
      # xo-pyprintjson
      # xo-callback
      # xo-webutil
      # xo-pywebutil
      # xo-reactor
      # xo-pyreactor
      # xo-simulator
      # xo-distribution
      # xo-pydistribution
      # xo-process
      # xo-pyprocess
      # xo-statistics
      # xo-kalmanfilter
      # xo-pykalmanfilter
      # xo-websock
      # xo-pywebsock
      # ----------------------------------------------------------------
